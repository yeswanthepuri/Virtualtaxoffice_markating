version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      args:
        - CONFIGURATION=production
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5011:5011"
    depends_on:
      - database
      - minio
      - redis
    environment:
      - ConnectionStrings__DefaultConnection=Host=database;Database=appdb;Username=user;Password=password
      - MinIO__Endpoint=minio:9000
      - MinIO__AccessKey=minioadmin
      - MinIO__SecretKey=minioadmin
      - MinIO__BucketName=uploads
      - ASPNETCORE_ENVIRONMENT=Production
      - Jwt__Key=your-super-secret-jwt-key-here-with-256-bits-minimum-length
      - Jwt__Issuer=https://vtobackend.coolify.marthand.org
      - Jwt__Audience=https://vtobackend.coolify.marthand.org
      - API_BASE_URL=https://vtobackend.coolify.marthand.org
      - ConnectionStrings__Redis=redis:6379
      - Redis__InstanceName=vto
    restart: unless-stopped

  database:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - database
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
  redis_data:
